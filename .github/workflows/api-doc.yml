# .github/workflows/api-docs.yml

name: Generate API Documentation

on:
  workflow_run:
    workflows: ["Semantic Release Workflow"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  generate-api-docs:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'
        
    - name: Install Scala and Scaladoc
      run: |
        curl -fL https://github.com/coursier/launchers/raw/master/cs-x86_64-pc-linux.gz | gzip -d > cs
        chmod +x cs
        ./cs setup --yes
        echo "$HOME/.local/share/coursier/bin" >> $GITHUB_PATH
        
    - name: Get version info
      id: version
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
        VERSION=${LATEST_TAG#v}
        MAJOR_VERSION=$(echo $VERSION | cut -d. -f1)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "major_version=$MAJOR_VERSION" >> $GITHUB_OUTPUT
        echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        echo "Generated for version: $VERSION (major: $MAJOR_VERSION)"
        
    - name: Set execute permissions for gradlew
      run: chmod +x ./gradlew
        
    - name: Generate Scaladoc for both nodes
      run: |
        echo "Generating Scaladoc for Public API..."
        
        ./gradlew scaladoc -PincludePackages="org.example.api"
        
        # Create versioned documentation structure
        mkdir -p docs/api/v${{ steps.version.outputs.major_version }}
        
        # Copy Scaladoc output (use node1 as both should be identical for API)
        if [ -d "node1/build/docs/scaladoc" ]; then
          cp -r node1/build/docs/scaladoc/* docs/api/v${{ steps.version.outputs.major_version }}/
        else
          echo "Warning: Scaladoc not generated, creating placeholder"
          mkdir -p docs/api/v${{ steps.version.outputs.major_version }}
          echo "<html><body><h1>API Documentation</h1><p>Version ${{ steps.version.outputs.version }}</p></body></html>" > docs/api/v${{ steps.version.outputs.major_version }}/index.html
        fi
        
    - name: Extract Docker Compose Public API
      run: |
        mkdir -p docs/api/v${{ steps.version.outputs.major_version }}/docker
        
        echo "# Docker Compose Public API v${{ steps.version.outputs.major_version }}" > docs/api/v${{ steps.version.outputs.major_version }}/docker/deployment-api.md
        echo "" >> docs/api/v${{ steps.version.outputs.major_version }}/docker/deployment-api.md
        echo "**Version:** ${{ steps.version.outputs.version }}" >> docs/api/v${{ steps.version.outputs.major_version }}/docker/deployment-api.md
        echo "**Generated:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> docs/api/v${{ steps.version.outputs.major_version }}/docker/deployment-api.md
        echo "" >> docs/api/v${{ steps.version.outputs.major_version }}/docker/deployment-api.md
        
        # Extract only Public API sections from docker-compose.yml
        awk '
        /# Public API:/ { 
          in_public_api = 1
          print
          next
        }
        in_public_api && /^#/ {
          print
          next
        }
        in_public_api && /^[^#]/ {
          if (!printed_code_block) {
            print "```yaml"
            printed_code_block = 1
          }
          print
          next
        }
        in_public_api && /^$/ {
          print
          next
        }
        !in_public_api || (/^[a-zA-Z]/ && !/^#/) {
          if (printed_code_block) {
            print "```"
            print ""
            printed_code_block = 0
          }
          in_public_api = 0
        }
        END {
          if (printed_code_block) {
            print "```"
          }
        }
        ' docker-compose.yml >> docs/api/v${{ steps.version.outputs.major_version }}/docker/deployment-api.md
        
        # Create Docker API index
        cat > docs/api/v${{ steps.version.outputs.major_version }}/docker/index.md << EOF
        # Deployment API v${{ steps.version.outputs.major_version }}
        
        **Version:** ${{ steps.version.outputs.version }}  
        **Generated:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        
        ## Docker Compose Public Interface
        
        - [Deployment Configuration](./deployment-api.md) - Service definitions and networking
        
        ## Breaking Changes Policy
        
        The following changes require a **MAJOR** version bump:
        
        | Component | Breaking Change Examples |
        |-----------|-------------------------|
        | **Service Names** | Renaming \`worker1\` or \`worker2\` |
        | **Port Mappings** | Changing \`2555:2555\` or \`2551:2551\` |
        | **Environment Variables** | Removing or renaming \`JOIN_TOKEN\`, \`MANAGER_IP\` |
        | **Network Names** | Changing \`swarm-network\` name |
        
        ## Backward Compatibility
        
        - ✅ **MINOR**: Adding new optional environment variables
        - ✅ **MINOR**: Adding new volumes (non-breaking)
        - ✅ **PATCH**: Internal build configuration changes
        - ❌ **MAJOR**: Any changes to the public interface above
        EOF
        
    - name: Generate Version-specific Index
      run: |
        cat > docs/api/v${{ steps.version.outputs.major_version }}/index.md << EOF
        # Public API Documentation v${{ steps.version.outputs.major_version }}
        
        **Current Version:** ${{ steps.version.outputs.version }}  
        **Generated:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        
        ## 📨 Message Protocol API
        
        - [Scala API Documentation](./index.html) - Actor message protocols and service keys
        
        ## 🐳 Deployment API
        
        - [Docker Compose Interface](./docker/) - Service configuration and networking
        
        ## 📋 Semantic Versioning
        
        This API follows [Semantic Versioning 2.0.0](https://semver.org/):
        
        | Version Component | When to Increment | Examples |
        |------------------|-------------------|----------|
        | **MAJOR** (breaking) | Incompatible changes | Message protocol changes, port changes, service renames |
        | **MINOR** (feature) | Backward compatible features | New message types, optional configurations |
        | **PATCH** (fix) | Backward compatible fixes | Bug fixes, documentation updates |
        
        ## 🔄 Version History
        
        - [All API Versions](../) - Browse historical API documentation
        - [Migration Guide](https://github.com/brunoesposito2/DockerSwarmAkka/releases) - Breaking changes between versions
        
        ## 🚀 Quick Start
        
        ### Using the Message Protocol
        
        \`\`\`scala
        import org.example.api.protocol.{Ping, Pong}
        import org.example.api.discovery.ServiceKeys
        
        // Register service
        context.system.receptionist ! Receptionist.Register(ServiceKeys.PingServiceKey, context.self)
        
        // Send message
        pingService ! Ping(context.self)
        \`\`\`
        
        ### Deploying with Docker Compose
        
        \`\`\`bash
        # Set required environment variables
        export JOIN_TOKEN=\$(docker swarm join-token -q worker)
        export MANAGER_IP=\$(docker node inspect self --format '{{.Status.Addr}}')
        
        # Deploy the cluster
        docker-compose up -d
        \`\`\`
        EOF
        
    - name: Update Main API Index
      run: |
        # Create main index with all versions
        ls docs/api/ 2>/dev/null | grep "^v[0-9]" | sort -V -r > /tmp/versions.txt || echo "" > /tmp/versions.txt
        
        cat > docs/api/index.md << EOF
        # Akka Cluster Public API Documentation
        
        **Last Updated:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        
        ## 📚 API Versions
        
        EOF
        
        if [ -s /tmp/versions.txt ]; then
          while read version; do
            if [ -f "docs/api/$version/index.md" ]; then
              echo "- [$version](./$version/) - Major version ${version#v}" >> docs/api/index.md
            fi
          done < /tmp/versions.txt
        else
          echo "- [v${{ steps.version.outputs.major_version }}](./v${{ steps.version.outputs.major_version }}/) - Major version ${{ steps.version.outputs.major_version }}" >> docs/api/index.md
        fi
        
        cat >> docs/api/index.md << EOF
        
        ## 🎯 What's in the Public API
        
        - **Message Protocol**: Actor messages (\`Ping\`, \`Pong\`) and service discovery keys
        - **Deployment Interface**: Docker Compose service definitions, ports, and networking
        
        ## 📖 Documentation Types
        
        - **Scala API**: Generated from source code comments (Scaladoc)
        - **Deployment API**: Extracted from Docker Compose configuration
        
        ## 🔄 Versioning Strategy
        
        - **Each major version** gets its own documentation
        - **Breaking changes** increment the major version
        - **Historical versions** remain available for migration reference
        
        ## 🚀 Getting Started
        
        1. **Choose the latest version** for new projects
        2. **Review breaking changes** when upgrading between major versions  
        3. **Follow the migration guides** in the GitHub releases
        
        ---
        
        Generated automatically from [brunoesposito2/DockerSwarmAkka](https://github.com/brunoesposito2/DockerSwarmAkka) releases.
        EOF
        
    - name: Create main site index
      run: |
        cat > docs/index.html << EOF
        <!DOCTYPE html>
        <html>
        <head>
            <title>Akka Cluster Docker Swarm</title>
            <style>
                body { font-family: system-ui, sans-serif; margin: 0; padding: 40px; background: #f8f9fa; }
                .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; }
                h1 { color: #1a1a1a; border-bottom: 3px solid #007acc; padding-bottom: 10px; }
                .card { background: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 6px; border-left: 4px solid #007acc; }
                a { color: #007acc; text-decoration: none; }
                a:hover { text-decoration: underline; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>🎭 Akka Cluster Docker Swarm</h1>
                <p>Distributed Akka cluster deployment using Docker Swarm with automated scaling and service discovery.</p>
                
                <div class="card">
                    <h2>📚 API Documentation</h2>
                    <p>Complete public API documentation with versioning support.</p>
                    <a href="./api/v${{ steps.version.outputs.major_version }}/">→ Browse API Documentation</a>
                </div>
                
                <div class="card">
                    <h2>🚀 Quick Start</h2>
                    <p>Deploy the cluster with Docker Compose:</p>
                    <pre>git clone https://github.com/brunoesposito2/DockerSwarmAkka.git
                    cd DockerSwarmAkka
                    docker-compose up -d</pre>
                                </div>
                                
                                <div class="card">
                                    <h2>🔗 Links</h2>
                                    <ul>
                                        <li><a href="https://github.com/brunoesposito2/DockerSwarmAkka">GitHub Repository</a></li>
                                        <li><a href="https://github.com/brunoesposito2/DockerSwarmAkka/releases">Releases</a></li>
                                    </ul>
                                </div>
                            </div>
                        </body>
                        </html>
                        EOF

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs

    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
        
    - name: Summary
      run: |
        echo "## 📖 API Documentation Generated Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Major Version:** v${{ steps.version.outputs.major_version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📁 Generated Documentation" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Scala API Documentation (Public packages only)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Docker Compose API Documentation" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Version-specific index page" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Main API index updated" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
        echo "- [View API Documentation](https://brunoesposito2.github.io/DockerSwarmAkka/api/)" >> $GITHUB_STEP_SUMMARY
        echo "- [Version v${{ steps.version.outputs.major_version }} Docs](https://brunoesposito2.github.io/DockerSwarmAkka/api/v${{ steps.version.outputs.major_version }}/)" >> $GITHUB_STEP_SUMMARY
