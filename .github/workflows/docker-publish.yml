name: Build and Push Docker Images

on:
  release:
    types: [published]

jobs:
  build-and-push-docker-images:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: main  # Ensure we're using the main branch for building Docker images
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: brunoesposito2
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata for Docker
      id: meta
      run: |
        # Extract version from the tag (remove 'v' prefix)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Building Docker images for version $VERSION"
        
    # Build and push all Docker images in parallel
    - name: Build and push Node1 image
      uses: docker/build-push-action@v5
      with:
        context: ./node1/
        file: ./Dockerfile
        push: true
        tags: |
          brunoesposito2/akka-node1:latest
          brunoesposito2/akka-node1:${{ steps.meta.outputs.version }}
        cache-from: type=registry,ref=brunoesposito2/akka-node1:buildcache
        cache-to: type=registry,ref=brunoesposito2/akka-node1:buildcache,mode=max
        
    # Build and push UserNode Frontend
    - name: Build and push Node 2 image
      uses: docker/build-push-action@v5
      with:
        context: ./node2/
        file: ./Dockerfile
        push: true
        tags: |
          brunoesposito2/akka-node2:latest
          brunoesposito2/akka-node2:${{ steps.meta.outputs.version }}
        cache-from: type=registry,ref=brunoesposito2/akka-node2:buildcache
        cache-to: type=registry,ref=brunoesposito2/akka-node2:buildcache,mode=max
